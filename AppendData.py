import  requests
from  bs4 import  BeautifulSoup
import xlwt
from xlrd import open_workbook
from xlutils.copy import copy





# 设置Excel样式
def set_style(name, height, bold=False):
    style = xlwt.XFStyle()  # 初始化样式
    font = xlwt.Font()  # 为样式创建字体
    font.name = name  # 'Times New Roman'
    font.bold = bold
    font.color_index = 4
    font.height = height
    style.font = font
    return style

def getTableByPage(curPage,nextPage):
    url = "http://www.szsti.gov.cn/services/hightech/default.aspx"
    from_data = {
        "PagerControl_input": str(curPage),
        "__EVENTARGUMENT": str(nextPage),
        "__EVENTTARGET": "PagerControl",
        "__EVENTVALIDATION": "/wEdAAEAAAD/////AQAAAAAAAAAPAQAAAAYAAAAIR6EBhXahAYV1oQGFdKEBhRwU3f3MQ+d8CwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJk3QAUPJr17ntVowFFRVa3ASeR3R0u0HpmlE0yngEF",
        "__VIEWSTATE": "",
        "ddlEnterpriseType": "",
        "txtEnterpriseName": ""
    }

    response = requests.post(url, data=from_data)
    print(response.status_code)
    if response.status_code == 200:
        soup = BeautifulSoup(response.text, "html.parser")
        target = soup.find(id="data_list_container").findAll("tr")
        rexcel = open_workbook("TokyoHot.xls")
        row = rexcel.sheets()[0].nrows
        excel = copy(rexcel)
        table = excel.get_sheet(0)
        for tr in target[1:]:  # ignore th
            tds = tr.findAll("td")  # 获取所有的 td
            td = [x for x in tds]
            index = td[0].text.strip()
            serialNo = td[1].text.strip()
            companyName = td[2].text.strip()
            location = td[3].text.strip()
            domain = td[4].text.strip()
            category = td[5].text.strip()
            table.write(row, 0, index, set_style('Arial', 220))
            table.write(row,  1, serialNo, set_style('Arial', 220))
            table.write(row, 2, companyName, set_style('Arial', 220))
            table.write(row,  3, location, set_style('Arial', 220))
            table.write(row, 4, domain, set_style('Arial', 220))
            table.write(row,  5, category, set_style('Arial', 220))
            row = row + 1
        excel.save('TokyoHot.xls')
    else:
        print("500 Error")
        getTableByPage(curPage=curPage,nextPage=nextPage)


def getFirstPage():
    response = requests.get("http://www.szsti.gov.cn/services/hightech/default.aspx")
    if response.status_code == 200:
        soup = BeautifulSoup(response.text, "html.parser")
        target = soup.find(id="data_list_container").findAll("tr")
        rexcel = open_workbook("TokyoHot.xls")
        row = rexcel.sheets()[0].nrows
        excel = copy(rexcel)
        table = excel.get_sheet(0)
        for tr in target[1:]:  # ignore th
            tds = tr.findAll("td")  # 获取所有的 td
            td = [x for x in tds]
            index = td[0].text.strip()
            serialNo = td[1].text.strip()
            companyName = td[2].text.strip()
            location = td[3].text.strip()
            domain = td[4].text.strip()
            category = td[5].text.strip()
            table.write(row, 0, index, set_style('Arial', 220))
            table.write(row, 1, serialNo, set_style('Arial', 220))
            table.write(row, 2, companyName, set_style('Arial', 220))
            table.write(row, 3, location, set_style('Arial', 220))
            table.write(row, 4, domain, set_style('Arial', 220))
            table.write(row, 5, category, set_style('Arial', 220))
            row = row + 1
        excel.save('TokyoHot.xls')
    else:
        print("firstPage 500 Error")
        getFirstPage()

def pa(curPage=None,nextPage=None):
    while curPage != 1:
        getTableByPage(curPage=curPage, nextPage=nextPage)
        curPage -= 1
        nextPage -= 1
    getFirstPage()

pa(654,655)